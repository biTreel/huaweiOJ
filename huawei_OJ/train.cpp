//train in station//it is not correct , maybe I don't get the mean of the text yet.#include <iostream>#include <algorithm>using namespace std;int main(){    int N;    cin>>N;    int i=0;    int* arr=new int [N];    int val;    while(i!= N && cin>>val)    {        arr[i]=val;        ++i;    }    sort(arr,arr+N);    do    {        for(int i=0;i!=N;++i)            cout<<arr[i]<<" ";        cout<<endl;    }while(next_permutation(arr,arr+N));    return 0;}/*the C code of next_permutation#include <stdlib.h>#include <stdio.h>  #define swap(h, i) do { \    int tmp = list[h]; \    list[h] = list[i]; \    list[i] = tmp; \  } while(0) typedef enum {     false = 0,     true = !false} bool; bool next_permutation(int list[], size_t size) {  size_t head_item;  size_t item;   // find the sub completed list  for (item = size - 1; item > 0; item--) {    if (list[item - 1] < list[item]) {      break;    }  }   if (item == 0) {    // finished    return false;  } else {    head_item = item - 1;  }   // find the next item:  // The first great than head_item  for (item = size - 1; item > head_item; item--) {    if (list[head_item] < list[item]) {      break;    }  }  swap(head_item, item);   // reverse the sub list  for (item = head_item + 1; item < size; item++, size--) {    swap(item, size - 1);  }   return true;}  int main(void){  int list[] = {1, 2, 2, 4};   do {    printf("%d %d %d %d\n", list[0], list[1], list[2], list[3]);  } while (next_permutation(list, sizeof(list) / sizeof(int)));   return EXIT_SUCCESS;}*/