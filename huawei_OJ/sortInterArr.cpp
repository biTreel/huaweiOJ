/* * Author: biTree * Date: July,08 2016 * middle: sort an array of interger. * flag==0,up sort; flag==1,down sort */#include <iostream>#include <vector>#include <algorithm>using namespace std;bool cmpUp(int x,int y){    return x<y;}bool cmpDown(int x,int y){    return x>y;}int main(){    int n;  //number of array    int flag;    int i=0;    int v;    cin>>n;    vector<int> ivec;    while(i != n){        cin>>v;        ivec.push_back(v);        ++i;    }    cin>>flag;    sort(ivec.begin(),ivec.end(),(1==flag ? cmpDown : cmpUp));    vector<int>::iterator it=ivec.begin();    while(it != ivec.end()){        cout<<*it++;    //<<(ivec.end()==it ? endl : " "<<endl);        if(ivec.end() != it)            cout<<" ";        //cout<<endl;    }    cout<<endl;    return 0;}