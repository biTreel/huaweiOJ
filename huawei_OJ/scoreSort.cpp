/* * Author: biTree * Date: July,08,2016 * middle: scoreSort */#include <iostream>#include <utility>#include <vector>#include <string>#include <algorithm>//#include <stdexcept>using namespace std;inline bool cmpUp(pair<string,int> x,pair<string,int> y){    return x.second < y.second;}inline bool cmpDown(pair<string,int> x,pair<string,int> y){    return x.second > y.second;}int main(){    int n;  //number of students    int bol;    //bol=1, up sort; bol=0,down sort.    cin>>n>>bol;    string name;    int score;    vector< pair<string,int> > scoreVec;    int i=0;    while(i != n){        //getline(cin,name);        cin>>name;        cin>>score;        scoreVec.push_back(make_pair(name,score));        ++i;    }    /*vector< pair<string,int> >::iterator it=scoreVec.begin();    while(it !=scoreVec.end()){        cout<<it->first<<" "<<it->second<<endl;        ++it;    }    */    stable_sort(scoreVec.begin(),scoreVec.end(),(1==bol ? cmpUp : cmpDown));    //cout<<"after sort:"<<endl;    //it=scoreVec.begin();    vector< pair<string,int> >::iterator it=scoreVec.begin();    while(it !=scoreVec.end()){        cout<<it->first<<" "<<it->second<<endl;        ++it;    }    return 0;}